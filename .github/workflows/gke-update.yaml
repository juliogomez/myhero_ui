# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, the action may change without warning.

---
name: Build and Deploy to GKE

on:
  push

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: mycluster
  GKE_ZONE: europe-southwest1-a
  DEPLOYMENT_NAME: myhero-ui
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
#    environment: production
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Google/Github auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'GKE auth'
        uses: simenandre/setup-gke-gcloud-auth-plugin@v1

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: 'Configure kubectl'
        run: |-
          gcloud config set project ${{ secrets.GKE_PROJECT }}
          gcloud config set compute/zone ${{ env.GKE_ZONE }}
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Docker authentication
      - name: 'Docker authentication'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "juliocisco/$DEPLOYMENT_NAME:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "juliocisco/$DEPLOYMENT_NAME:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kustomize edit set image juliocisco/$DEPLOYMENT_NAME:$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          cat kustomization.yaml
          cat k8s_myhero_ui.yml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
